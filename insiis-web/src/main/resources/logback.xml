<?xml version="1.0" encoding="UTF-8"?>
<configuration packagingData="true" debug="false">
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>

    <!-- 设置全局属性 -->
    <springProperty name="LOG_HOME" scope="context" source="logging.ext.log-home"/>
    <property name="LOG_HOME_DEFAULT" value="${user.home}/logs"/>

    <springProperty name="LOG_LEVEL_ROOT" scope="context" source="logging.level.root" defaultValue="INFO"/>
    <springProperty name="BUSINESS_AREA" scope="context" source="logging.ext.business-area" defaultValue="00"/>
    <springProperty name="APPID" scope="context" source="logging.ext.appid"/>
    <springProperty name="INSTANCE_ID" scope="context" source="logging.ext.instance-id"/>
    <springProperty name="APP_NAME" scope="context" source="spring.application.name" defaultValue="application"/>
    <!-- 本节点ip地址，格式为xxx_xxx_xxx_xx -->
    <define name="NODE_IP" class="org.mohrss.leaf.uni.common.logging.LeafLogIPPropertyDefiner"/>

    <!-- 日志文件：LOG_HOME/BUSINESS_AREA.APPID.NODE.log.yyyymmdd.index -->
    <property name="LOG_FILE"
              value="${LOG_HOME:-${LOG_HOME_DEFAULT}}/${BUSINESS_AREA}.${APPID:-${APP_NAME}}.${INSTANCE_ID:-${NODE_IP}}.log"/>
    <property name="ERROR_LOG_FILE"
              value="${LOG_HOME:-${LOG_HOME_DEFAULT}}/err_${BUSINESS_AREA}.${APPID:-${APP_NAME}}.${INSTANCE_ID:-${NODE_IP}}.log"/>
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="FILE_LOG_PATTERN" value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <!-- 控制台输出器定义 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 对记录事件进行格式化。1.把日志信息转换成字节数组 2.把字节数组写入到输出流 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>${CONSOLE_LOG_CHARSET}</charset>
        </encoder>
    </appender>

    <!-- 滚动策略File输出器 -->
    <!-- 按日期和大小自动拆分日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>${FILE_LOG_CHARSET}</charset>
        </encoder>
        <File>${LOG_FILE}</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件输出的文件名-->
            <FileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz</FileNamePattern>
            <!-- 日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <!-- 日志拆分大小-->
            <MaxFileSize>100MB</MaxFileSize>
        </rollingPolicy>
    </appender>

    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <OnMismatch>DENY</OnMismatch>
            <OnMatch>ACCEPT</OnMatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>${FILE_LOG_CHARSET}</charset>
        </encoder>
        <File>${ERROR_LOG_FILE}</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件输出的文件名-->
            <FileNamePattern>${ERROR_LOG_FILE}.%d{yyyy-MM-dd}.%i.gz</FileNamePattern>
            <!-- 日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <!-- 日志拆分大小-->
            <MaxFileSize>100MB</MaxFileSize>
        </rollingPolicy>
    </appender>
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE"/>
        <discardingThreshold>0</discardingThreshold>
        <queueSize>2048</queueSize>
        <neverBlock>false</neverBlock>
    </appender>

    <appender name="ASYNC_FILE_ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE_ERROR"/>
        <discardingThreshold>0</discardingThreshold>
        <queueSize>2048</queueSize>
        <neverBlock>false</neverBlock>
    </appender>
    <!-- 统一日志配置级别 -->
    <root level="${LOG_LEVEL_ROOT}">
        <appender-ref ref="ASYNC_FILE"/>
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ASYNC_FILE_ERROR"/>
    </root>
</configuration>
